<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Mo的个人博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.juedigulang.com/"/>
  <updated>2017-11-03T08:57:56.618Z</updated>
  <id>http://www.juedigulang.com/</id>
  
  <author>
    <name>Mo</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>乱码工具判断工具</title>
    <link href="http://www.juedigulang.com/2017/11/03/%E4%B9%B1%E7%A0%81%E5%B7%A5%E5%85%B7%E7%B1%BB/"/>
    <id>http://www.juedigulang.com/2017/11/03/乱码工具类/</id>
    <published>2017-11-03T08:37:11.000Z</published>
    <updated>2017-11-03T08:57:56.618Z</updated>
    
    <content type="html"><![CDATA[<p>乱码，指的是“由于本地计算机在用文本编辑器打开源文件时，使用了不相应字符集而造成部分或所有字符无法被阅读的一系列字符。”，造成其结果的原因是多种多样的。<br><a id="more"></a></p><h3 id="乱码工具类代码如下："><a href="#乱码工具类代码如下：" class="headerlink" title="乱码工具类代码如下："></a>乱码工具类代码如下：</h3><pre><code>import java.util.regex.Matcher;import java.util.regex.Pattern;/**  * @author  * @version  * 说明 判断中文字符串是否乱码 */public class ChineseUtil {/**  * @author mo   * @version   * 说明 判断是否是中文 */private static boolean isChinese(char c) {  Character.UnicodeBlock ub = Character.UnicodeBlock.of(c);  if (ub == Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS  || ub == Character.UnicodeBlock.CJK_COMPATIBILITY_IDEOGRAPHS  || ub == Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A|| ub == Character.UnicodeBlock.GENERAL_PUNCTUATION  || ub == Character.UnicodeBlock.CJK_SYMBOLS_AND_PUNCTUATION  || ub == Character.UnicodeBlock.HALFWIDTH_AND_FULLWIDTH_FORMS) {  return true;  }  return false;  }  /**  * @author mo   * @version   * 说明 判断是否乱码 */public static boolean isMessyCode(String strName) {  Pattern p = Pattern.compile(&quot;\\s*|\t*|\r*|\n*&quot;);  Matcher m = p.matcher(strName);  String after = m.replaceAll(&quot;&quot;);  String temp = after.replaceAll(&quot;\\p{P}&quot;, &quot;&quot;);  char[] ch = temp.trim().toCharArray();  float chLength = 0 ;  float count = 0;  for (int i = 0; i &lt; ch.length; i++) {  char c = ch[i];  if (!Character.isLetterOrDigit(c)) {  if (!isChinese(c)) {  count = count + 1;  }  chLength++;   }  }  float result = count / chLength ;  if (result &gt; 0.4) {  return true;  } else {  return false;  }  }}</code></pre><p>将上面的工具类放入带到项目中，在需要引用的项目中引入这个工具类即可   </p><pre><code>String zgbm = request.getParameter(&quot;zgbm&quot;);        if(ChineseUtil.isMessyCode(zgbm)){            try {                zgbm = new String(zgbm.getBytes(&quot;ISO8859-1&quot;),&quot;UTF-8&quot;);            } catch (UnsupportedEncodingException e) {                // TODO Auto-generated catch block                e.printStackTrace();            }        }</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;乱码，指的是“由于本地计算机在用文本编辑器打开源文件时，使用了不相应字符集而造成部分或所有字符无法被阅读的一系列字符。”，造成其结果的原因是多种多样的。&lt;br&gt;
    
    </summary>
    
      <category term="java" scheme="http://www.juedigulang.com/categories/java/"/>
    
    
      <category term="乱码" scheme="http://www.juedigulang.com/tags/%E4%B9%B1%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>码云和github公钥的配置</title>
    <link href="http://www.juedigulang.com/2017/11/03/%E7%A0%81%E4%BA%91%E5%85%AC%E9%92%A5%E9%85%8D%E7%BD%AE/"/>
    <id>http://www.juedigulang.com/2017/11/03/码云公钥配置/</id>
    <published>2017-11-03T07:56:49.233Z</published>
    <updated>2017-11-03T08:18:38.521Z</updated>
    
    <content type="html"><![CDATA[<h3 id="用户名和邮箱地址的使用"><a href="#用户名和邮箱地址的使用" class="headerlink" title="用户名和邮箱地址的使用"></a>用户名和邮箱地址的使用</h3><p>用户名和邮箱地址是本地git客户端的一个变量，不随git库而改变。<br>每次commit都会用用户名和邮箱纪录。<br>github的contributions统计就是按邮箱来统计的</p><a id="more"></a><h3 id="查看用户名和邮箱的地址"><a href="#查看用户名和邮箱的地址" class="headerlink" title="查看用户名和邮箱的地址"></a>查看用户名和邮箱的地址</h3><pre><code>$ git config user.name$ git config user.email</code></pre><h3 id="设置用户名和邮箱地址"><a href="#设置用户名和邮箱地址" class="headerlink" title="设置用户名和邮箱地址"></a>设置用户名和邮箱地址</h3><pre><code>$ git config --global user.name &quot;username&quot;$ git config --global user.email &quot;email&quot;</code></pre><h3 id="生成sshKey"><a href="#生成sshKey" class="headerlink" title="生成sshKey"></a>生成sshKey</h3><p>在git命令行中，输入命令： cd ~/.ssh，来检测是否生成过key,没有生成过key，会有相关信息提示；然后输入命令： ssh-keygen -t rsa -C “邮箱地址”，按下回车键；然后根据返回的信息，找到.ssh目录下的两个文件；</p><pre><code>cat ~/.ssh/id_rsa.pub# ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC6eNtGpNGwstc....</code></pre><h3 id="添加后在终端中输入"><a href="#添加后在终端中输入" class="headerlink" title="添加后在终端中输入"></a>添加后在终端中输入</h3><pre><code>ssh -T git@gitee.com</code></pre><p>若返回<br>    Welcome to Gitee.com, yourname!</p><p>则代表添加成功</p><h3 id="github添加是同样的流程"><a href="#github添加是同样的流程" class="headerlink" title="github添加是同样的流程"></a>github添加是同样的流程</h3>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;用户名和邮箱地址的使用&quot;&gt;&lt;a href=&quot;#用户名和邮箱地址的使用&quot; class=&quot;headerlink&quot; title=&quot;用户名和邮箱地址的使用&quot;&gt;&lt;/a&gt;用户名和邮箱地址的使用&lt;/h3&gt;&lt;p&gt;用户名和邮箱地址是本地git客户端的一个变量，不随git库而改变。&lt;br&gt;每次commit都会用用户名和邮箱纪录。&lt;br&gt;github的contributions统计就是按邮箱来统计的&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://www.juedigulang.com/categories/hexo/"/>
    
    
      <category term="ssh公钥" scheme="http://www.juedigulang.com/tags/ssh%E5%85%AC%E9%92%A5/"/>
    
  </entry>
  
  <entry>
    <title>个人博客</title>
    <link href="http://www.juedigulang.com/2017/11/02/Mo/"/>
    <id>http://www.juedigulang.com/2017/11/02/Mo/</id>
    <published>2017-11-02T08:03:22.927Z</published>
    <updated>2017-10-26T09:52:07.445Z</updated>
    
    <content type="html"><![CDATA[<pre><code>我的第一篇个人博客</code></pre><p>欢迎来到我的个人小屋</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;pre&gt;&lt;code&gt;我的第一篇个人博客
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;欢迎来到我的个人小屋&lt;/p&gt;

      
    
    </summary>
    
      <category term="杂谈" scheme="http://www.juedigulang.com/categories/%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="死肥宅" scheme="http://www.juedigulang.com/tags/%E6%AD%BB%E8%82%A5%E5%AE%85/"/>
    
  </entry>
  
  <entry>
    <title>Node.js安装</title>
    <link href="http://www.juedigulang.com/2017/11/02/Nodejs%E5%AE%89%E8%A3%85/"/>
    <id>http://www.juedigulang.com/2017/11/02/Nodejs安装/</id>
    <published>2017-11-02T08:03:22.927Z</published>
    <updated>2017-11-01T07:54:04.481Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Node-js简介"><a href="#Node-js简介" class="headerlink" title="Node.js简介"></a>Node.js简介</h3><p>简单的说 Node.js 就是运行在服务端的 JavaScript。Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效。Node.js 的包管理器 npm，是全球最大的开源库生态系统。<br><a id="more"></a></p><h3 id="下载Node-js"><a href="#下载Node-js" class="headerlink" title="下载Node.js"></a>下载Node.js</h3><p>打开官网下载链接:<a href="https://nodejs.org/en/download/" target="_blank" rel="external">https://nodejs.org/en/download/</a><br><img src="https://i.imgur.com/2YWZz1q.png" alt=""></p><h3 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h3><p>1、下载完成后，双击“node-v6.9.2-x64.msi”，开始安装Node.js<br><img src="https://i.imgur.com/CdBixyY.png" alt=""><br>2、点击Next按钮<br><img src="https://i.imgur.com/iFdaq6p.png" alt=""><br>3、勾选复选框，点击【Next】按钮<br><img src="https://i.imgur.com/NBpoDyf.png" alt=""><br>4、修改好目录后，点击【Next】按钮<br><img src="https://i.imgur.com/BFvWQwF.png" alt=""><br><img src="https://i.imgur.com/JlV4gQH.png" alt=""><br>5、安装完后点击【Finish】按钮完成安装<br><img src="https://i.imgur.com/U4Ufq9j.png" alt=""><br>6、至此Node.js已经安装完成，可以先进行下简单的测试安装是否成功了，后面还要进行环境配置<br>在键盘按下【win+R】键，输入cmd，然后回车，打开cmd窗口<br><img src="https://i.imgur.com/PccF3DO.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Node-js简介&quot;&gt;&lt;a href=&quot;#Node-js简介&quot; class=&quot;headerlink&quot; title=&quot;Node.js简介&quot;&gt;&lt;/a&gt;Node.js简介&lt;/h3&gt;&lt;p&gt;简单的说 Node.js 就是运行在服务端的 JavaScript。Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效。Node.js 的包管理器 npm，是全球最大的开源库生态系统。&lt;br&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://www.juedigulang.com/categories/hexo/"/>
    
    
      <category term="hexo、node.js" scheme="http://www.juedigulang.com/tags/hexo%E3%80%81node-js/"/>
    
  </entry>
  
  <entry>
    <title>使用hexo+码云搭建个人博客</title>
    <link href="http://www.juedigulang.com/2017/11/02/hexo%E5%AE%89%E8%A3%85/"/>
    <id>http://www.juedigulang.com/2017/11/02/hexo安装/</id>
    <published>2017-11-02T08:03:22.911Z</published>
    <updated>2017-11-01T07:35:30.174Z</updated>
    
    <content type="html"><![CDATA[<h3 id="使用工具介绍"><a href="#使用工具介绍" class="headerlink" title="使用工具介绍"></a>使用工具介绍</h3><p>1、码云 Pages：码云 Pages 是一个免费的静态网页托管服务，您可以使用码云 Pages 托管博客、项目官网等静态网页。这样就不用购买服务器和域名了，如果您使用过 Github Pages 那么您会很快上手使用码云的Pages服务。这里使用码云上的Pages 而不是用Github Pages，主要原因就是在国内没有VPN的话。。。你懂得！还有就是支持国产！链接：<a href="https://git.oschina.net/" target="_blank" rel="external">https://git.oschina.net/</a></p><p>2、Hexo：Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。使用者只需要专注于写博客而不需要关注网站是如何生成的。而且还有丰富的博客主题可以选择！链接：<a href="https://hexo.io/zh-cn/（ps：这是国外网站，翻墙吧少年，需要自由门" target="_blank" rel="external">https://hexo.io/zh-cn/（ps：这是国外网站，翻墙吧少年，需要自由门</a> 翻墙软件可以在博客中联系我哦）<br><a id="more"></a></p><h3 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h3><p>Node.js安装</p><blockquote><p>参考：<a href="http://www.runoob.com/nodejs/nodejs-install-setup.html（ps：如果没有VPN的用户最好切换一下npm的源，不然后续的步骤可能会让你想砸电脑，安装完后，在命令窗口执行下面代码）" target="_blank" rel="external">http://www.runoob.com/nodejs/nodejs-install-setup.html（ps：如果没有VPN的用户最好切换一下npm的源，不然后续的步骤可能会让你想砸电脑，安装完后，在命令窗口执行下面代码）</a></p></blockquote><pre><code>npm config set registry http://registry.cnpmjs.org #切换npm为淘宝镜像</code></pre><p>Git安装</p><blockquote><p>参考<a href="http://www.runoob.com/git/git-install-setup.html" target="_blank" rel="external">http://www.runoob.com/git/git-install-setup.html</a></p></blockquote><p>Hexo安装。（ ps：安装完Node.js和Git之后不需要配置些什么，只需要安装成功就是了，如果想明白原理的话可以深入的学习。）</p><p>如果您的电脑中已经安装上述必备程序，那么恭喜您！接下来只需要使用 npm 即可完成 Hexo 的安装。打开命令窗口输入下面代码：</p><pre><code>npm install -g hexo-cli</code></pre><p>安装成功后输入hexo 如果得到下面这个结果，恭喜你！安装成功！<br><img src="https://i.imgur.com/knj5ef9.png" alt=""></p><p>Hexo的常用命令说明：</p><blockquote><p>参考：<a href="https://hexo.io/zh-cn/docs/commands.html" target="_blank" rel="external">https://hexo.io/zh-cn/docs/commands.html</a></p></blockquote><h3 id="本地运行Hexo"><a href="#本地运行Hexo" class="headerlink" title="本地运行Hexo"></a>本地运行Hexo</h3><p>安装 Hexo 完成后，请依次执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。将<folder> 替换成项目存放的文件夹目录，</folder></p><pre><code>hexo init &lt;folder&gt;cd &lt;folder&gt;npm installhexo generate   </code></pre><p>新建完成后，指定文件夹的目录如下：</p><p><img src="https://i.imgur.com/TxNmAPZ.png" alt=""></p><p>进行到这步后就可以先在本地运行下，看看效果了。执行下面命令：</p><pre><code>cd &lt;folder&gt; #切换到项目目录下npm install       #install before start blogginghexo server #运行本地服务</code></pre><p>浏览器输入<a href="http://localhost:4000就可以看到效果。如下：" target="_blank" rel="external">http://localhost:4000就可以看到效果。如下：</a></p><p><img src="https://i.imgur.com/0orsKgO.png" alt=""></p><h3 id="修改Hexo的主题"><a href="#修改Hexo的主题" class="headerlink" title="修改Hexo的主题"></a>修改Hexo的主题</h3><p>当然，上面运行的只是Hexo官方默认的主题配置效果，想要个性一点？，下面我们就将他改造成自己想要的个性主题。</p><p>Hexo的主题都是一些前端民间高手写的模版，可以在官方收录的主题中去挑选：<a href="https://hexo.io/themes/" target="_blank" rel="external">https://hexo.io/themes/</a></p><p>看上一个主题后点击下图位置，进入下载主题文件。如下图：</p><p><img src="https://i.imgur.com/9prhX8U.png" alt=""></p><p>主题下载完成后，将主题文件解压到Hexo项目的thems文件夹下面（ps:我这里的项目目录是在桌面的Hexo文件夹里面。）</p><p><img src="https://i.imgur.com/Owv5y5K.png" alt=""></p><p>接下来就是修改Hexo的配置文件_config.yml，将里面theme 对应的值改为之前下载的主题的文件夹名字，本文里面下载的主题文件夹名字为hexo-theme-smackdown-master。</p><p><img src="https://i.imgur.com/oUoij99.png" alt=""></p><p>注意：这里“：”后面必须要有一个空格，而且这个空格要在英文输入法下，不然会报一些稀奇古怪的错。</p><p>按照之前步骤本地重新运行后，如下图：</p><p><img src="https://i.imgur.com/1PYd8n8.png" alt=""></p><p>关于Hexo中_config.yml 文件的其他配置，大家可以参考官方的文档，这里就不多赘述了：</p><pre><code>文档链接 https://hexo.io/zh-cn/docs/configuration.html</code></pre><p>下载的每个主题中，有一个配置文件，名字也叫_config.yml，这里大家千万不要和之前Hexo根目录下的_config.yml搞混淆了，这里面配置的主要是些与主题相关的东西，比如一些文章阅读量，多说插件，cnzz站长工具等等的配置信息。一般里面也都有注释，这里就不赘述了，不懂得可以在我的博客问我。</p><p>一些主题在GitHub上面也都有主题安装的一些文档，写的都很详细。推荐一个主题的文档，结合官方的文档看完之后，基本上也就明白了。</p><pre><code>推荐一个主题的文档https://github.com/yscoder/hexo-theme-indigo/wiki</code></pre><h3 id="编写博客文章"><a href="#编写博客文章" class="headerlink" title="编写博客文章"></a>编写博客文章</h3><p>如果你使用过MarkDown 来写博客文章的话，接下来就简单多了，没使用过也没关系，推荐大家一个编辑工具马克飞象 链接：<a href="https://maxiang.io/，在编辑器里面写好文章后，复制或另存为.md文件" target="_blank" rel="external">https://maxiang.io/，在编辑器里面写好文章后，复制或另存为.md文件</a>, 与普通的.md文件不同 要在文件开头添加下面代码</p><pre><code>title: #文章标题date: #文章日期tags: #文章标签categories: #文章分类---</code></pre><p>在.md文件的开头添加上面代码，是为了让Hexo框架在生成网页的时候，设置相应的参数。例如下图所示：<br><img src="https://i.imgur.com/r3ofBm7.png" alt=""></p><p>将写好的.md文件放入Hexo项目的source 目录下的_posts 文件夹中，可以看到里面有个hello-world.md 文件，这就是默认的文章。</p><p>重新在本地启动项目，访问就可以看到之前添加的文章。</p><h3 id="生成静态Html文件"><a href="#生成静态Html文件" class="headerlink" title="生成静态Html文件"></a>生成静态Html文件</h3><p>现在只能在本地启动项目然后通过本地地址访问博客网站，下面我们就可以利用Hexo生成静态Html，很简单，只需要在命令窗口执行下面代码：</p><pre><code>cd &lt;folder&gt; #切换到项目目录下hexo generate   #生成静态文件到项目根目录的public文件夹中</code></pre><p>发布静态Html文件到码云 Pages上</p><p>注册一个码云帐号，并创建一个项目。如下图：<br><img src="https://i.imgur.com/oo9ylK4.png" alt=""></p><p>创建完项目后得到项目的Https的地址后面要用。地址获取如下图<br><img src="https://i.imgur.com/pvFwdCT.png" alt=""></p><p>这里借用一个插件来帮助我们完成代码上传的工作，安装 hexo-deployer-git。安装代码如下</p><pre><code>npm install hexo-deployer-git --save#把public里面生成的文件推上到码云上。</code></pre><p>配置项目根目录_config.yml 文件，修改deploy 的值，如下图：</p><p><img src="https://i.imgur.com/Pye8eMq.png" alt=""></p><p>修改完后在命令窗口执行下面命令：<br>    cd <folder> #切换到项目目录下<br>    hexo deploy #一键部署功能</folder></p><p>之后会弹出一个对话框，输入码云的帐号密码。</p><p>部署成功之后，登录码云，查看之前创建的项目中出现了本地项目中public 文件夹中的文件，这时候代表之前的部署是成功的。</p><p>然后如下图，启动码云的pages功能：<br><img src="https://i.imgur.com/5pFYcZR.png" alt=""></p><p>访问链接<br><img src="https://i.imgur.com/Os6lpWc.png" alt=""></p><p>这时候就看到之前和本地启动一样的效果了。博客部署完成，在这之后，只需要每次用马克飞象写好文章后，放入Hexo项目的source 目录下的_posts 文件夹中，在按照之前步骤更新博客就OK了。还可以随时切换博客的主题哦！</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;使用工具介绍&quot;&gt;&lt;a href=&quot;#使用工具介绍&quot; class=&quot;headerlink&quot; title=&quot;使用工具介绍&quot;&gt;&lt;/a&gt;使用工具介绍&lt;/h3&gt;&lt;p&gt;1、码云 Pages：码云 Pages 是一个免费的静态网页托管服务，您可以使用码云 Pages 托管博客、项目官网等静态网页。这样就不用购买服务器和域名了，如果您使用过 Github Pages 那么您会很快上手使用码云的Pages服务。这里使用码云上的Pages 而不是用Github Pages，主要原因就是在国内没有VPN的话。。。你懂得！还有就是支持国产！链接：&lt;a href=&quot;https://git.oschina.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://git.oschina.net/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2、Hexo：Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。使用者只需要专注于写博客而不需要关注网站是如何生成的。而且还有丰富的博客主题可以选择！链接：&lt;a href=&quot;https://hexo.io/zh-cn/（ps：这是国外网站，翻墙吧少年，需要自由门&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://hexo.io/zh-cn/（ps：这是国外网站，翻墙吧少年，需要自由门&lt;/a&gt; 翻墙软件可以在博客中联系我哦）&lt;br&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://www.juedigulang.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://www.juedigulang.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://www.juedigulang.com/2017/11/02/hello-world/"/>
    <id>http://www.juedigulang.com/2017/11/02/hello-world/</id>
    <published>2017-11-02T08:03:22.911Z</published>
    <updated>2017-10-27T08:08:10.515Z</updated>
    
    <content type="html"><![CDATA[<h3 id="创建一个文件"><a href="#创建一个文件" class="headerlink" title="创建一个文件"></a>创建一个文件</h3><p>$ hexo new “My New Post”</p><h3 id="运行本地服务"><a href="#运行本地服务" class="headerlink" title="运行本地服务"></a>运行本地服务</h3><p>$ hexo server</p><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><p>$ hexo generate</p><h3 id="部署到服务器"><a href="#部署到服务器" class="headerlink" title="部署到服务器"></a>部署到服务器</h3><p>$ hexo deploy</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;创建一个文件&quot;&gt;&lt;a href=&quot;#创建一个文件&quot; class=&quot;headerlink&quot; title=&quot;创建一个文件&quot;&gt;&lt;/a&gt;创建一个文件&lt;/h3&gt;&lt;p&gt;$ hexo new “My New Post”&lt;/p&gt;
&lt;h3 id=&quot;运行本地服务&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
    
  </entry>
  
</feed>
